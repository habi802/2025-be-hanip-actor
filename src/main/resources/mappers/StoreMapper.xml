<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.hanipactor.application.store.StoreMapper">
    <!-- 가게 리스트 조회 -->
    <select id="findAllStore">
        SELECT s.id, s.name, s.image_path, s.is_active, s.is_open,
        s.max_delivery_fee, s.min_delivery_fee, s.min_amount,
        GROUP_CONCAT(DISTINCT sc.category) AS categories
          FROM stores s
          LEFT JOIN store_category sc ON sc.store_id = s.id
          LEFT JOIN menus m ON m.store_id = s.id
        <where>
            <if test="req.searchText != null and req.searchText != ''">
                AND (s.name LIKE '%${req.searchText}%' OR m.name LIKE '%${req.searchText}%')
            </if>
            <if test="categoryCode != null and categoryCode != ''">
                AND sc.category = #{categoryCode}
            </if>
        </where>
        GROUP BY s.id
        ORDER BY s.id DESC
        LIMIT #{req.size} OFFSET #{req.offset}
    </select>

    <!-- 가게 상세 조회 -->
    <select id="findByStoreId">
        SELECT s.id, s.user_id, s.category, s.name, s.comment,
        s.address, s.tel, s.owner_name, s.is_active, s.image_path,
        u.phone, u.email
        FROM stores s
        JOIN users u ON u.id = s.user_id
        WHERE s.id = #{storeId}
    </select>

    <!-- 사장 가게 상세 조회 -->
    <select id="findByUserId">
        SELECT s.id, s.user_id, s.category, s.name, s.comment,
        s.address, s.postcode, s.address_detail, s.tel, s.owner_name, s.is_active, s.image_path,
        u.phone, u.email
        FROM stores s
        JOIN users u ON u.id = s.user_id
        WHERE s.user_id = #{userId}
    </select>

    <select id="findStoreIdByUserId">
        SELECT id
        FROM stores
        WHERE user_id = #{userId}
    </select>

    <!-- 가게 정보 수정 -->
    <update id="updateByUserId">
        UPDATE stores s
        JOIN users u ON u.id = s.user_id
        <set>
            s.category = #{category}
            , s.comment = #{comment}
            <if test="businessNumber != null">
            , s.business_number = #{businessNumber}
            </if>
            <if test="licensePath != null">
            , s.license_path = #{licensePath}
            </if>
            , s.postcode = #{postcode}
            , s.address = #{address}
            , s.address_detail = #{addressDetail}
            , s.tel = #{tel}
            , s.owner_name = #{ownerName}
            <if test="imagePath != null">
                , s.image_path = #{imagePath}
            </if>
            , u.phone = #{phone}
            , u.email = #{email}
        </set>
        WHERE s.id = #{storeId}
        AND user_id = #{userId}
    </update>

    <!-- 가게 활성화 -->
    <update id="updateIsActiveByStoreIdAndUserId">
        UPDATE stores
        SET is_active = IF(is_active = 1, 0, 1)
        WHERE id = #{storeId}
        AND user_id = #{userId}
    </update>

    <!-- 가게 등록 수 통계 -->
    <select id="findStatsByDate">
        <choose>
            <!-- 연간(2년 전, 1년 전, 올해) -->
            <when test="type == 'YEAR'">
                WITH years AS (
                <foreach collection="periods" item="period" separator=" UNION ALL ">
                    SELECT #{period} AS year
                </foreach>
                )
                SELECT y.year AS period, COUNT(s.id) AS total
                FROM years y
                LEFT JOIN stores s
                ON YEAR(s.created_at) = y.year
                GROUP BY y.year
                ORDER BY y.year ASC
            </when>

            <!-- 월간(2달 전, 1달 전, 이번 달) -->
            <when test="type == 'MONTH'">
                WITH months AS (
                <foreach collection="periods" item="period" separator=" UNION ALL ">
                    SELECT #{period} AS month
                </foreach>
                )
                SELECT DATE_FORMAT(m.month, '%Y-%m') AS period, COUNT(s.id) AS total
                FROM months m
                LEFT JOIN stores s
                ON DATE_FORMAT(s.created_at, '%Y-%m-01') = m.month
                GROUP BY m.month
                ORDER BY m.month ASC
            </when>

            <!-- 주간(2주 전, 1주 전, 이번 주) -->
            <when test="type == 'WEEK'">
                WITH weeks AS (
                <foreach collection="periods" item="period" separator=" UNION ALL ">
                    SELECT #{period} AS week_start
                </foreach>
                )
                SELECT DATE_FORMAT(w.week_start, '%x-W%v') AS period, COUNT(s.id) AS total
                FROM weeks w
                LEFT JOIN stores s
                ON STR_TO_DATE(CONCAT(YEARWEEK(s.created_at, 3),' Monday'), '%X%V %W') = w.week_start
                GROUP BY w.week_start
                ORDER BY w.week_start ASC
            </when>

            <!-- 일간(2일 전, 1일 전, 오늘) -->
            <otherwise>
                WITH days AS (
                <foreach collection="periods" item="period" separator=" UNION ALL ">
                    SELECT #{period} AS day
                </foreach>
                )
                SELECT d.day AS period, COUNT(s.id) AS total
                FROM days d
                LEFT JOIN stores s
                ON DATE(s.created_at) = d.day
                GROUP BY d.day
                ORDER BY d.day ASC
            </otherwise>
        </choose>
    </select>
</mapper>